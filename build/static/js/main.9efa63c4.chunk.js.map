{"version":3,"sources":["config.js","components/Field.js","availableShapes.js","components/Shape.js","reducers/info.js","reducers/index.js","reducers/filledCells.js","constants/actionTypes.js","reducers/activeShape.js","reducers/nextShape.js","reducers/isPlaying.js","reducers/isOver.js","reducers/speedUp.js","store/index.js","actions/index.js","containers/Info.js","containers/App.js","serviceWorker.js","index.js"],"names":["config","width","height","Field","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","canvas","React","createRef","ctx","current","getContext","_this$canvas$current","clearRect","cell","color","_this2","cellSide","borderSide","innerCellSide","x","y","fillStyle","fillRect","drawBorder","_ref","coords","beginPath","moveTo","lineTo","fill","leftBorder","rightBorder","bottomBorder","cells","_this3","forEach","drawCell","_this$props$state","state","filledCells","activeShape","clearCanvas","drawCells","getCanvasContext","redrawCanvas","_config$fieldSizePx","react_default","a","createElement","ref","className","Component","availableShapes","rotations","getShape","type","rotation","undefined","shape","shapesCount","length","Math","floor","random","rotationsCount","getShapeAfterRotating","initCells","_rotateShape","newRotation","rotateShape","changedCells","diffs","map","i","calcCellsDiff","newCells","objectSpread","Shape","nextShape","_getShape","maxX","reduce","max","val","realCoords","coord","addToX","key","style","stroke","initialState","score","lines","level","combineReducers","arguments","action","number","payload","filter","prevShape","newFilledCells","concat","toConsumableArray","shapeSize","acc","shiftX","shiftY","shift","direction","isPlaying","info","isOver","speedUp","createStore","reducer","startGame","moveShape","Info","_store$getState","store","getState","onClick","dispatch","components_Shape","App","timer","speedTimer","isLegalShapePosition","document","body","addEventListener","e","_store$getState3","code","canShapeRotate","canShapeMoveTo","_config$fieldSize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","filledCell","value","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_config$fieldSize2","_loop","_i","cellsOnLine","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_store$getState7","isShapeOutsideField","newNextShape","replaceShape","clearFullLines","_store$getState8","fps","normal","clearTimer","clearInterval","addTimer","setInterval","handleMove","addKeyListeners","updateTimers","components_Field","containers_Info","Boolean","window","location","hostname","match","render","ReactDOM","containers_App","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9efa63c4.chunk.js","sourcesContent":["export default {\n  fieldSize: {\n    width: 15,\n    height: 25\n  },\n  fieldSizePx: {\n    width: 300,\n    height: 500\n  },\n  cellSide: 20\n};\n","import React, {Component} from 'react';\nimport config from '../config';\nimport '../stylesheets/Field.css';\n\nclass Field extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.ctx = null;\n  }\n\n  getCanvasContext() {\n    this.ctx = this.canvas.current.getContext('2d');\n  }\n\n  clearCanvas() {\n    const { width, height } = this.canvas.current;\n    this.ctx.clearRect(0, 0, width, height);\n  }\n\n  drawCell(cell, color) {\n    const { cellSide } = config;\n    const borderSide = cellSide / 8;\n    const innerCellSide = cellSide - 2 * borderSide;\n    const x = cell.x * cellSide;\n    const y = cell.y * cellSide;\n\n    // Draw main part of the cell\n    this.ctx.fillStyle = color ? color : cell.color;\n    this.ctx.fillRect(\n      x + borderSide,\n      y + borderSide,\n      innerCellSide,\n      innerCellSide\n    );\n\n    const drawBorder = ({coords, color}) => {\n      this.ctx.fillStyle = color;\n      this.ctx.beginPath();\n      this.ctx.moveTo(coords[0].x, coords[0].y);\n      this.ctx.lineTo(coords[1].x, coords[1].y);\n      this.ctx.lineTo(coords[2].x, coords[2].y);\n      this.ctx.lineTo(coords[3].x, coords[3].y);\n      this.ctx.lineTo(coords[0].x, coords[0].y);\n      this.ctx.fill();\n    };\n\n    const topBorder = {\n      color: '#b3b3fb',\n      coords: [\n        { x, y },\n        { x: x + borderSide, y: y + borderSide },\n        { x: x + cellSide - borderSide, y: y + borderSide },\n        { x: x + cellSide, y }\n      ]\n    };\n    const leftBorder = {\n      color: '#0000d8',\n      coords: [\n        { x, y },\n        { x: x + borderSide, y: y + borderSide},\n        { x: x + borderSide, y: y + cellSide - borderSide },\n        { x, y: y + cellSide }\n      ]\n    };\n    const rightBorder = {\n      color: '#0000d8',\n      coords: [\n        { x: x + cellSide - borderSide, y: y + borderSide },\n        { x: x + cellSide, y },\n        { x: x + cellSide, y: y + cellSide },\n        { x: x + cellSide - borderSide, y: y + cellSide - borderSide }\n      ]\n    };\n    const bottomBorder = {\n      color: '#000078',\n      coords: [\n        { x: x + borderSide, y: y + cellSide - borderSide },\n        { x, y: y + cellSide },\n        { x: x + cellSide, y: y + cellSide },\n        { x: x + cellSide - borderSide, y: y + cellSide - borderSide }\n      ]\n    };\n\n    // Draw borders\n    drawBorder(topBorder);\n    drawBorder(leftBorder);\n    drawBorder(rightBorder);\n    drawBorder(bottomBorder);\n\n  }\n\n  drawCells(cells, color) {\n    cells.forEach(cell => this.drawCell(cell, color));\n  }\n\n  redrawCanvas() {\n    const { filledCells, activeShape } = this.props.state;\n    this.clearCanvas();\n    this.drawCells(filledCells);\n    this.drawCells(activeShape.cells, activeShape.color);\n  }\n\n  componentDidMount() {\n    this.getCanvasContext();\n  }\n\n  componentDidUpdate() {\n    this.redrawCanvas();\n  }\n\n  render() {\n    const { width, height } = config.fieldSizePx;\n    return (\n      <canvas\n        ref={this.canvas}\n        className=\"field\"\n        width={width}\n        height={height}\n      >\n      </canvas>\n    );\n  }\n}\n\nexport default Field;\n","const availableShapes = [\n  {\n    color: '#00f0f0',\n    rotations: [\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n        { x: 3, y: 0 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 0, y: 1 },\n        { x: 0, y: 2 },\n        { x: 0, y: 3 }\n      ]\n    ]\n  },\n  {\n    color: '#f0f000',\n    rotations: [\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 }\n      ]\n    ]\n  },\n  {\n    color: '#a000f0',\n    rotations: [\n      [\n        { x: 1, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 2, y: 1 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 0, y: 2 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n        { x: 1, y: 1 }\n      ],\n      [\n        { x: 1, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 1, y: 2 }\n      ]\n    ]\n  },\n  {\n    color: '#0000f0',\n    rotations: [\n      [\n        { x: 0, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 2, y: 1 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 0, y: 1 },\n        { x: 0, y: 2 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n        { x: 2, y: 1 }\n      ],\n      [\n        { x: 1, y: 0 },\n        { x: 1, y: 1 },\n        { x: 0, y: 2 },\n        { x: 1, y: 2 }\n      ]\n    ]\n  },\n  {\n    color: '#00f000',\n    rotations: [\n      [\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 1, y: 2 }\n      ]\n    ]\n  },\n  {\n    color: '#f0a000',\n    rotations: [\n      [\n        { x: 2, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 2, y: 1 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 0, y: 1 },\n        { x: 0, y: 2 },\n        { x: 1, y: 2 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n        { x: 0, y: 1 }\n      ],\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 1, y: 1 },\n        { x: 1, y: 2 }\n      ]\n    ]\n  },\n  {\n    color: '#f00000',\n    rotations: [\n      [\n        { x: 0, y: 0 },\n        { x: 1, y: 0 },\n        { x: 1, y: 1 },\n        { x: 2, y: 1 }\n      ],\n      [\n        { x: 1, y: 0 },\n        { x: 0, y: 1 },\n        { x: 1, y: 1 },\n        { x: 0, y: 2 }\n      ]\n    ]\n  }\n];\n\nexport const getShape = (type, rotation) => {\n  if (type !== undefined && rotation !== undefined) {\n    const shape = availableShapes[type];\n    const color = shape.color;\n    const cells = shape.rotations[rotation];\n    return { type, rotation, color, cells };\n  } else {\n    const shapesCount = availableShapes.length;\n    const type = Math.floor(Math.random() * shapesCount);\n    const shape = availableShapes[type];\n    const color = shape.color;\n    const rotationsCount = shape.rotations.length;\n    const rotation = Math.floor(Math.random() * rotationsCount);\n    const cells = shape.rotations[rotation];\n    return { type, rotation, color, cells };\n  }\n\n};\n\nconst rotateShape = shape => {\n  const { type, rotation } = shape;\n  const shapeObj = availableShapes[type];\n  const rotationCount = shapeObj.rotations.length;\n  let newRotation = rotation + 1;\n  if (newRotation === rotationCount) newRotation = 0;\n  const { cells } = getShape(type, newRotation);\n  return {\n    rotation: newRotation,\n    cells\n  };\n};\n\nconst calcCellsDiff = (cells, changedCells) => {\n  return cells.map((cell, i) => ({\n    x: changedCells[i].x - cell.x,\n    y: changedCells[i].y - cell.y\n  }));\n};\n\nexport const getShapeAfterRotating = shape => {\n  const { type, rotation, cells } = shape;\n  const { cells: initCells } = getShape(type, rotation);\n  const {\n    cells: changedCells,\n    rotation: newRotation\n  } = rotateShape(shape);\n  const diffs = calcCellsDiff(initCells, changedCells);\n  const newCells = cells.map((cell, i) => ({\n    x: cell.x + diffs[i].x,\n    y: cell.y + diffs[i].y\n  }));\n\n  return {\n    ...shape,\n    rotation: newRotation,\n    cells: newCells\n  };\n};\n","import React from 'react';\nimport { getShape } from '../availableShapes';\n\nconst Shape = ({nextShape}) => {\n  if (!nextShape) {\n    return (\n      <svg width={50} height={50}></svg>\n    );\n  }\n\n  const { type, rotation } = nextShape;\n  const { color, cells: coords } = getShape(type, rotation);\n\n  const maxX = coords.reduce((max, val) => val.x > max ? val.x : max, 0);\n  const realCoords = coords.map(coord => {\n    const addToX = (3 - maxX) / 2;\n    return {\n      x: (coord.x + addToX) * 12.5,\n      y: coord.y * 12.5\n    };\n  });\n\n  return (\n    <svg width={50} height={50}>\n      {\n        realCoords.map((coord, i) =>\n          <rect\n            key={i}\n            x={coord.x}\n            y={coord.y}\n            width={12.5}\n            height={12.5}\n            style={{fill: color, stroke: 'red'}}\n          />\n        )\n      }\n    </svg>\n  );\n};\n\nexport default Shape;\n","import { MAKE_MOVE, CLEAR_LINE, START_GAME } from '../constants/actionTypes';\n\nconst initialState = {\n  score: 0,\n  lines: 0,\n  level: 1\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case MAKE_MOVE:\n      return {\n        ...state,\n        score: state.score + state.level / 10\n      };\n    case CLEAR_LINE:\n      const maxLevel = 9;\n      const level = Math.floor((state.lines + 1) / 5) + 1;\n      return {\n        score: state.score + state.level * 100,\n        lines: state.lines + 1,\n        level: level > maxLevel ? maxLevel : level\n      };\n    case START_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport filledCells from './filledCells';\nimport activeShape from './activeShape';\nimport nextShape from './nextShape';\nimport isPlaying from './isPlaying';\nimport info from './info';\nimport isOver from './isOver';\nimport speedUp from './speedUp';\n\nexport default combineReducers({\n  filledCells,\n  activeShape,\n  nextShape,\n  isPlaying,\n  info,\n  isOver,\n  speedUp\n});\n","import {\n  START_GAME,\n  CLEAR_LINE,\n  REPLACE_SHAPE\n} from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case START_GAME:\n      return [];\n    case CLEAR_LINE:\n      const { number } = action.payload;\n      return state.filter(({y}) => y !== number)\n                  .map(cell => ({\n                    ...cell,\n                    y: cell.y + (cell.y < number ? 1 : 0)\n                  }));\n    case REPLACE_SHAPE:\n      const { prevShape } = action.payload;\n      const newFilledCells = prevShape.cells.map(cell => ({\n        x: cell.x,\n        y: cell.y,\n        color: prevShape.color\n      }));\n\n      return [\n        ...state,\n        ...newFilledCells\n      ];\n    default:\n      return state;\n  }\n};\n","export const START_GAME = 'START_GAME';\nexport const PAUSE_GAME = 'PAUSE_GAME';\nexport const RESUME_GAME = 'RESUME_GAME';\nexport const FINISH_GAME = 'FINISH_GAME';\nexport const RESIZE_SCREEN = 'RESIZE_SCREEN';\nexport const MAKE_MOVE = 'MAKE_MOVE';\nexport const ROTATE_SHAPE = 'ROTATE_SHAPE';\nexport const MOVE_SHAPE = 'MOVE_SHAPE';\nexport const INCREASE_SPEED = 'INCREASE_SPEED';\nexport const DECREASE_SPEED = 'DECREASE_SPEED';\nexport const CLEAR_LINE = 'CLEAR_LINE';\nexport const REPLACE_SHAPE = 'REPLACE_SHAPE';\n","import {\n  START_GAME,\n  MAKE_MOVE,\n  ROTATE_SHAPE,\n  MOVE_SHAPE,\n  REPLACE_SHAPE\n} from '../constants/actionTypes';\nimport config from '../config';\nimport { getShapeAfterRotating } from '../availableShapes';\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case START_GAME:\n    case REPLACE_SHAPE: {\n      const { activeShape } = action.payload;\n      const { cells } = activeShape;\n      const shapeSize = cells.reduce((acc, cell) => ({\n          width: cell.x > acc.width ? cell.x : acc.width,\n          height: cell.y > acc.height ? cell.y : acc.height\n        }),\n        {width: 0, height: 0});\n      const shiftX = Math.floor(config.fieldSize.width / 2) -\n                    Math.floor(shapeSize.width / 2);\n      const shiftY = -shapeSize.height;\n      return {\n        ...activeShape,\n        cells: cells.map(cell => ({\n          x: cell.x + shiftX,\n          y: cell.y + shiftY\n        }))\n      };\n    }\n    case MAKE_MOVE:\n      return {\n        ...state,\n        cells: state.cells.map(cell => ({\n          x: cell.x,\n          y: cell.y + 1\n        }))\n      };\n    case ROTATE_SHAPE:\n      return getShapeAfterRotating(state);\n    case MOVE_SHAPE: {\n      const { direction } = action.payload;\n      const shift = direction === 'left' ? -1 : 1;\n      return {\n        ...state,\n        cells: state.cells.map(cell => ({\n          ...cell,\n          x: cell.x + shift\n        }))\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { START_GAME, REPLACE_SHAPE } from '../constants/actionTypes';\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case START_GAME:\n    case REPLACE_SHAPE:\n      return action.payload.nextShape;\n    default:\n      return state;\n  }\n};\n","import {\n  START_GAME,\n  PAUSE_GAME,\n  FINISH_GAME,\n  RESUME_GAME\n} from '../constants/actionTypes';\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case START_GAME:\n    case RESUME_GAME:\n      return true;\n    case PAUSE_GAME:\n    case FINISH_GAME:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { START_GAME, FINISH_GAME } from '../constants/actionTypes';\n\nexport default (state = true, action) => {\n  switch (action.type) {\n    case START_GAME:\n      return false;\n    case FINISH_GAME:\n      return true;\n    default:\n      return state;\n  }\n};\n","import {\n  INCREASE_SPEED,\n  DECREASE_SPEED\n} from '../constants/actionTypes';\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case DECREASE_SPEED:\n      return false;\n    case INCREASE_SPEED:\n      return true;\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nexport default createStore(reducer);\n","import {\n  START_GAME,\n  PAUSE_GAME,\n  RESUME_GAME,\n  FINISH_GAME,\n  MAKE_MOVE,\n  ROTATE_SHAPE,\n  MOVE_SHAPE,\n  INCREASE_SPEED,\n  DECREASE_SPEED,\n  CLEAR_LINE,\n  REPLACE_SHAPE\n} from '../constants/actionTypes';\nimport { getShape } from '../availableShapes';\n\nexport const startGame = cellSide => {\n  const { type, rotation } = getShape(); // Next shape\n  return {\n    type: START_GAME,\n    payload: {\n      activeShape: getShape(),\n      nextShape: { type, rotation },\n      cellSide\n    }\n  };\n};\n\nexport const pauseGame = () => ({\n  type: PAUSE_GAME\n});\n\nexport const resumeGame = () => ({\n  type: RESUME_GAME\n});\n\nexport const finishGame = () => ({\n  type: FINISH_GAME\n});\n\nexport const makeMove = () => ({\n  type: MAKE_MOVE\n});\n\nexport const rotateShape = () => ({\n  type: ROTATE_SHAPE\n});\n\nexport const moveShape = direction => ({\n  type: MOVE_SHAPE,\n  payload: {\n    direction\n  }\n});\n\nexport const increaseSpeed = () => ({\n  type: INCREASE_SPEED\n});\n\nexport const decreaseSpeed = () => ({\n  type: DECREASE_SPEED\n});\n\nexport const clearLine = number => ({\n  type: CLEAR_LINE,\n  payload: {\n    number\n  }\n});\n\nexport const replaceShape = (activeShape, nextShape) => {\n  const { type, rotation } = nextShape;\n  const newNextShape = getShape();\n\n  return {\n    type: REPLACE_SHAPE,\n    payload: {\n      prevShape: activeShape,\n      activeShape: getShape(type, rotation),\n      nextShape: {\n        type: newNextShape.type,\n        rotation: newNextShape.rotation\n      }\n    }\n  };\n};\n","import React from 'react';\nimport Shape from '../components/Shape';\nimport '../stylesheets/Info.css';\nimport store from '../store';\nimport { startGame, pauseGame, resumeGame } from '../actions';\n\nconst Info = () => {\n  const { nextShape, isPlaying, isOver, info } = store.getState();\n  const togglePlaying = () => {\n    if (isPlaying) store.dispatch(pauseGame());\n    else if (isOver) store.dispatch(startGame());\n    else store.dispatch(resumeGame());\n  };\n\n  return (\n    <div className=\"info\">\n      <button onClick={togglePlaying}>{isPlaying ? 'PAUSE' : 'PLAY'}</button>\n      <span><b>NEXT SHAPE:</b></span>\n      <Shape nextShape={nextShape} />\n      <span><b>SCORE:</b>{Math.floor(info.score)}</span>\n      <span><b>LEVEL:</b>{info.level}</span>\n      <span><b>LINES:</b>{info.lines}</span>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport Field from '../components/Field';\nimport Info from './Info';\nimport '../stylesheets/App.css';\nimport store from '../store';\nimport {\n  startGame,\n  resumeGame,\n  pauseGame,\n  rotateShape,\n  moveShape,\n  increaseSpeed,\n  decreaseSpeed,\n  makeMove,\n  clearLine,\n  replaceShape,\n  finishGame\n} from '../actions';\nimport * as availableShapes from '../availableShapes';\nimport config from '../config';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.timer = null;\n    this.speedTimer = null;\n  }\n\n  canShapeRotate() {\n    const { getShapeAfterRotating } = availableShapes;\n    const { activeShape } = store.getState();\n    const { cells } = getShapeAfterRotating(activeShape);\n\n    return this.isLegalShapePosition(cells);\n  }\n\n  canShapeMoveTo(direction) {\n    const { activeShape } = store.getState();\n    const shift = direction === 'left' ? -1 : 1;\n    const newCells = activeShape.cells.map(cell => ({\n      x: cell.x + shift,\n      y: cell.y\n    }));\n\n    return this.isLegalShapePosition(newCells);\n  }\n\n  addKeyListeners() {\n\n    document.body.addEventListener('keydown', e => {\n      const { isPlaying, isOver, speedUp } = store.getState();\n      if (!isPlaying) {\n        if (e.code === 'Space') {\n          if (isOver) store.dispatch(startGame());\n          else  store.dispatch(resumeGame());\n        }\n      } else {\n        switch (e.code) {\n          case 'ArrowUp':\n            if (this.canShapeRotate()) store.dispatch(rotateShape());\n            break;\n          case 'ArrowLeft':\n            if (this.canShapeMoveTo('left')) store.dispatch(moveShape('left'));\n            break;\n          case 'ArrowRight':\n            if (this.canShapeMoveTo('right')) store.dispatch(moveShape('right'));\n            break;\n          case 'ArrowDown':\n            if (!speedUp) store.dispatch(increaseSpeed());\n            break;\n          case 'Space':\n            store.dispatch(pauseGame());\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    document.body.addEventListener('keyup', e => {\n      const { isPlaying } = store.getState();\n      if (isPlaying && e.code === 'ArrowDown') store.dispatch(decreaseSpeed());\n    });\n  }\n\n  isLegalShapePosition(cells) {\n    const { filledCells } = store.getState();\n    const { width, height } = config.fieldSize;\n\n    for (const filledCell of filledCells) {\n      for (const cell of cells) {\n        if (filledCell.x === cell.x && filledCell.y === cell.y) {\n          return false;\n        }\n      }\n    }\n\n    for (const cell of cells) {\n      if (cell.y >= height) return false;\n      if (cell.x < 0 || cell.x >= width) return false;\n    }\n\n    return true;\n  }\n\n  clearFullLines() {\n    const { width, height } = config.fieldSize;\n    for (let i = height - 1; i >= 0;) {\n      const { filledCells } = store.getState();\n      const cellsOnLine = filledCells.filter(cell => cell.y === i).length;\n      if (cellsOnLine === width) store.dispatch(clearLine(i));\n      else if (!cellsOnLine) break;\n      else i--;\n    }\n  }\n\n  isShapeOutsideField() {\n    const { cells } = store.getState().activeShape;\n    for (const cell of cells) {\n      if (cell.y < 0) return true;\n    }\n    return false;\n  }\n\n  handleMove() {\n    const { activeShape, nextShape } = store.getState();\n    const newCells = activeShape.cells.map(cell => ({\n      x: cell.x,\n      y: cell.y + 1\n    }));\n\n    if (this.isLegalShapePosition(newCells)) {\n      return store.dispatch(makeMove());\n    }\n    if (this.isShapeOutsideField()) {\n      return store.dispatch(finishGame());\n    }\n\n    store.dispatch(replaceShape(activeShape, nextShape));\n    this.clearFullLines();\n    store.dispatch(makeMove());\n\n  }\n\n  updateTimers() {\n    const { isPlaying, speedUp, info: { level } } = store.getState();\n    const fps = {\n      normal: 2 + level,\n      speedUp: 20\n    };\n\n    const clearTimer = timer => {\n      clearInterval(timer);\n      return null;\n    };\n\n    const addTimer = fps =>\n      setInterval(() =>\n        this.handleMove(), 1000 / fps);\n\n    if (!isPlaying) {\n      if (this.timer) this.timer = clearTimer(this.timer);\n      if (this.speedTimer) this.speedTimer = clearTimer(this.speedTimer);\n    } else if (speedUp) {\n      if (this.timer) this.timer = clearTimer(this.timer);\n      if (!this.speedTimer) this.speedTimer = addTimer(fps.speedUp);\n    } else {\n      if (!this.timer) this.timer = addTimer(fps.normal);\n      if (this.speedTimer) this.speedTimer = clearTimer(this.speedTimer);\n    }\n  }\n\n  componentDidMount() {\n    this.addKeyListeners();\n  }\n\n  componentDidUpdate() {\n    this.updateTimers();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Field state={store.getState()} />\n        <Info />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './containers/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nconst render = () =>\n  ReactDOM.render(<App />, document.getElementById('root'));\n\nstore.subscribe(render);\nrender();\n\nserviceWorker.unregister();\n"],"sourceRoot":""}